{"version":3,"sources":["components/Container/Container.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Section/Section.module.css"],"names":["Container","children","className","s","container","FeedbackOptions","onLeaveFeedback","button","type","id","onClick","Section","title","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","percentage","Math","round","handleLeaveFeedback","e","setState","prevState","target","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uRAMeA,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCexBI,MAff,YAA+C,IAApBC,EAAmB,EAAnBA,gBAEzB,OACE,qCACE,wBAAQJ,UAAWC,IAAEI,OAAQC,KAAK,SAASC,GAAG,OAAQC,QAASJ,EAA/D,kBACA,wBAAQJ,UAAWC,IAAEI,OAAQC,KAAK,SAASC,GAAG,UAAWC,QAASJ,EAAlE,qBACA,wBAAQJ,UAAWC,IAAEI,OAAQC,KAAK,SAASC,GAAG,MAAOC,QAASJ,EAA9D,qB,gBCGSK,MATf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOX,EAAW,EAAXA,SACvB,OACE,oCACE,oBAAIC,UAAWC,IAAES,MAAjB,SAAyBA,IACxBX,MCOQY,MAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCAAS,+BAAOJ,OAChB,0CAAY,+BAAOC,OACnB,sCAAQ,+BAAOC,OACf,wCAAU,+BAAOC,OACN,IAAVA,GAAe,oDAAsB,iCAAOC,EAAP,eCD7BC,MANf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,8BAAMA,KCIWC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,mBAAqB,WAAO,IAAD,EACK,EAAKD,MAEnC,OAHyB,EACjBR,KADiB,EACXC,QADW,EACFC,K,EAKzBQ,gCAAkC,WAChC,IAAMP,EAAQ,EAAKM,qBACXT,EAAS,EAAKQ,MAAdR,KACFW,EAAqB,IAAPX,EAAcG,EACjC,OAAKH,EAGCY,KAAKC,MAAMF,GAFT,G,EAKXG,oBAAsB,SAAAC,GACpB,EAAKC,UAAS,SAACC,GAIb,OAAO,eACJF,EAAEG,OAAOvB,GAAKsB,EAAUF,EAAEG,OAAOvB,IAAM,O,uDAKpC,IAAD,EACwBwB,KAAKX,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQgB,KAAKV,qBACbL,EAAqBe,KAAKT,kCAEhC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBN,gBAAiB2B,KAAKL,wBAEzC,cAAC,EAAD,CAAShB,MAAM,aAAf,SACGK,EAAQ,EACP,cAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoBA,IACnF,cAAC,EAAD,CAAcE,QAAQ,+B,GA/CJc,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.071d19e4.chunk.js","sourcesContent":["import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import PropTypes from \"prop-types\";\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ onLeaveFeedback }) {\r\n\r\n  return (\r\n    <>\r\n      <button className={s.button} type='button' id='good'  onClick={onLeaveFeedback}>Good</button>\r\n      <button className={s.button} type='button' id='neutral'  onClick={onLeaveFeedback}>Neutral</button>\r\n      <button className={s.button} type='button' id='bad'  onClick={onLeaveFeedback}>Bad</button>\r\n    </>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from \"prop-types\";\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({title, children}) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n}","import PropTypes from \"prop-types\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <p>Good: <span>{good}</span></p>\r\n      <p>Neutral: <span>{neutral}</span></p>\r\n      <p>Bad: <span>{bad}</span></p>\r\n      <p>Total: <span>{total}</span></p>\r\n      {total !== 0 && <p>Positive feedback: <span>{positivePercentage} %</span></p>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Notification({ message }) {\r\n  return (\r\n    <div>{message}</div>\r\n  )\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}","import React, { Component } from 'react';\r\nimport Container from './components/Container/Container';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Section from './components/Section/Section';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Notification from './components/Notification/Notification'\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad} = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const { good } = this.state;\r\n    const percentage = (good * 100) / total;\r\n     if (!good) {\r\n      return 0;\r\n    }\r\n    return Math.round(percentage)\r\n  }\r\n\r\n  handleLeaveFeedback = e => {\r\n    this.setState((prevState) => {\r\n      // console.log([e.target.id]);\r\n      // console.log(prevState);\r\n      // console.log(prevState[e.target.id]);\r\n      return {\r\n        [e.target.id]: prevState[e.target.id] + 1,\r\n      }\r\n   })\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <Container>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions onLeaveFeedback={this.handleLeaveFeedback} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage}></Statistics>\r\n          ) : (<Notification message=\"No feedback given\" />)\r\n          }\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__37ZCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2bwDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__292gS\"};"],"sourceRoot":""}