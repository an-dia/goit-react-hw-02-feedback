{"version":3,"sources":["components/Container/Container.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","index.js","components/Section/Section.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Container","children","className","s","container","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","id","onClick","toUpperCase","substring","Section","title","section","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","percentage","Math","round","handleLeaveFeedback","e","target","setState","prevState","this","objKey","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uRAMeA,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCsBxBI,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEP,UAAWC,IAAEO,OACbC,KAAK,SACLC,GAAIH,EACJI,QAASN,EALX,SAOGE,EAAO,GAAGK,cAAgBL,EAAOM,UAAU,IANvCN,S,gBCIAO,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOhB,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEe,QAAtB,UACE,oBAAIhB,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBhB,MCmBQkB,MAxBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCACQ,+BAAOJ,OAEf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,wCACS,+BAAOC,OAEL,IAAVA,GACC,oDACqB,iCAAOC,EAAP,eCbdC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,8BAAMA,KCIMC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAEpC,OAHyB,EACjBR,KADiB,EACXC,QADW,EACFC,K,EAKzBQ,gCAAkC,WAChC,IAAMP,EAAQ,EAAKM,qBACXT,EAAS,EAAKQ,MAAdR,KACFW,EAAqB,IAAPX,EAAcG,EAClC,OAAKH,EAGEY,KAAKC,MAAMF,GAFT,G,EAKXG,oBAAsB,SAAAC,GAAM,IAClBvB,EAAOuB,EAAEC,OAATxB,GACR,EAAKyB,UAAS,SAAAC,GAIZ,OAAO,eACJ1B,EAAK0B,EAAU1B,GAAM,O,uDAKlB,IAAD,EACwB2B,KAAKX,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQgB,KAAKV,qBACbL,EAAqBe,KAAKT,kCAC1BU,EAASC,OAAOC,KAAKH,KAAKX,OAChC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASkC,EACTjC,gBAAiBgC,KAAKL,wBAG1B,cAAC,EAAD,CAASjB,MAAM,aAAf,SACGM,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcE,QAAQ,+B,GA1DDiB,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.817cb9eb.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {options.map(option => (\n        <button\n          key={option}\n          className={s.button}\n          type=\"button\"\n          id={option}\n          onClick={onLeaveFeedback}\n        >\n          {option[0].toUpperCase() + option.substring(1)}\n        </button>\n      ))}\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p>\n        Good: <span>{good}</span>\n      </p>\n      <p>\n        Neutral: <span>{neutral}</span>\n      </p>\n      <p>\n        Bad: <span>{bad}</span>\n      </p>\n      <p>\n        Total: <span>{total}</span>\n      </p>\n      {total !== 0 && (\n        <p>\n          Positive feedback: <span>{positivePercentage} %</span>\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <div>{message}</div>;\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport Container from './components/Container/Container';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / total;\n    if (!good) {\n      return 0;\n    }\n    return Math.round(percentage);\n  };\n\n  handleLeaveFeedback = e => {\n    const { id } = e.target;\n    this.setState(prevState => {\n      // console.log([e.target.id]);\n      // console.log(prevState);\n      // console.log(prevState[e.target.id]);\n      return {\n        [id]: prevState[id] + 1,\n      };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const objKey = Object.keys(this.state);\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            onLeaveFeedback={this.handleLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3scSq\",\"title\":\"Section_title__292gS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2bwDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__37ZCt\"};"],"sourceRoot":""}